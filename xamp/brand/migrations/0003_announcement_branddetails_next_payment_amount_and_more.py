# Generated by Django 5.2.3 on 2025-07-26 18:04

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('brand', '0002_branddetails'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('type', models.CharField(choices=[('announcement', 'Announcement'), ('new_feature', 'New Feature')], default='announcement', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0, help_text='Higher number means higher priority')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-priority', '-publish_date'],
            },
        ),
        migrations.AddField(
            model_name='branddetails',
            name='next_payment_amount',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Amount of next scheduled payment', max_digits=10),
        ),
        migrations.AddField(
            model_name='branddetails',
            name='next_payment_date',
            field=models.DateField(blank=True, help_text='Date of next scheduled payment', null=True),
        ),
        migrations.AddField(
            model_name='branddetails',
            name='orders_this_week',
            field=models.IntegerField(default=0, help_text='Number of orders received this week'),
        ),
        migrations.AddField(
            model_name='branddetails',
            name='return_rate',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Return rate percentage', max_digits=5),
        ),
        migrations.AddField(
            model_name='branddetails',
            name='total_orders',
            field=models.IntegerField(default=0, help_text='Total number of orders received'),
        ),
        migrations.AddField(
            model_name='branddetails',
            name='total_outstanding_payment',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Total outstanding payment amount', max_digits=12),
        ),
        migrations.AddField(
            model_name='branddetails',
            name='total_payments_till_date',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Total payments received till date', max_digits=12),
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brand_logos/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='brand', to='brand.branduser')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BrandPendingTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('category', models.CharField(choices=[('onboarding', 'Onboarding'), ('orders', 'Orders'), ('inventory', 'Inventory'), ('payments', 'Payments'), ('returns', 'Returns'), ('compliance', 'Compliance'), ('other', 'Other')], default='other', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('is_actionable', models.BooleanField(default=True, help_text='Whether the brand can take action on this task')),
                ('action_url', models.CharField(blank=True, help_text='URL for the action to be taken', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pending_tasks', to='brand.branduser')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=8, null=True)),
                ('dimensions', models.CharField(blank=True, help_text='L x W x H in cm', max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('discontinued', 'Discontinued'), ('out_of_stock', 'Out of Stock')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='brand.brand')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('state_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(default='India', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='brand.brand')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('warehouse_code', models.CharField(max_length=50, unique=True)),
                ('warehouse_type', models.CharField(choices=[('main', 'Main Warehouse'), ('distribution', 'Distribution Center'), ('retail', 'Retail Store'), ('fulfillment', 'Fulfillment Center')], default='main', max_length=20)),
                ('address', models.TextField()),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('capacity', models.PositiveIntegerField(blank=True, help_text='Storage capacity in square feet', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to='brand.state')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('state', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ProductWarehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('minimum_stock_level', models.PositiveIntegerField(default=10, help_text='Minimum stock level for reorder')),
                ('maximum_stock_level', models.PositiveIntegerField(blank=True, help_text='Maximum stock level', null=True)),
                ('last_restocked', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brand.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brand.warehouse')),
            ],
            options={
                'ordering': ['-quantity'],
                'unique_together': {('product', 'warehouse')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='warehouses',
            field=models.ManyToManyField(related_name='products', through='brand.ProductWarehouse', to='brand.warehouse'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('brand', 'sku')},
        ),
    ]
